一.目前存在的问题.
  微服务架构需要将每个服务继续拆分,使每个服务负责的粒度相对较小,那么服务的数量必然增加,而每个服务必然需要一定的配置才能启动,这样势必容易造成配置的混乱.
  比如现在有20个微服务,每个微服务都需要连接数据库,那就要放20份配置,假如需要修改,就需要修改20遍,很不方便,所需就出现了配置中心区解决这个问题.
  
二.SpringCloud Config
   SpringCloud Config为微服务提供集中化的外部配置支持,是一个单独的微服务,为所有微服务的不同环境提供了一个中心化的外部配置(这里使用的使Git).它分为客户端和服务端两部分.
   1.服务端.
     也称为分布式配置中心,连接指定配置服务器获取配置并为客户端提供 获取配置信息,加密和解析信息的接口.
	 
   2.客户端.
     通过指定的配置中心来管理应用资源,以及于业务相关的配置,并在启动时从配置中心加载配置信息.
	 
   3.作用.
     (1)集中管理配置文件.
	 (2)动态化的配置更新,分环境部署比如说dev/test/prod/beta/release
	 (3)运行期间动态调整配置,从配置中心拉去自己需要的配置信息.
	 (4)将配置文件以Rest接口形式暴露,方便查看.
	 
三.流程.
   1.首先在Git上创建配置仓库.
   2.新建配置微服务,在启动的时候会从本地仓库获取配置文件(测试),并暴露访问配置文件接口.
   4.这样需要修改配置文件时,运维人员直接修改git仓库中,然后拉取到本地即可.
   
   
