一.新建消费者模块
   1.新建Module Module cloud-stream-rabbitmq-consumer8802
   2.建立pom,和生产者是一样的
   3.新建yml
     server:
	  port: 8802

	spring:
	  application:
		name: cloud-stream-consumer
	  cloud:
		stream:
		  binders: # 在此处配置要绑定的rabbitmq的服务信息；
			defaultRabbit: # 表示定义的名称，用于于binding整合
			  type: rabbit # 消息组件类型
			  environment: # 设置rabbitmq的相关的环境配置
				spring:
				  rabbitmq:
					host: localhost
					port: 5672
					username: guest
					password: guest
		  bindings: # 服务的整合处理
			input: # 配置消费的topic,消息的类型
			  destination: studyExchangeForBling # 表示要使用的Exchange名称定义
			  content-type: application/json # 设置消息类型，本次为json，文本则设置“text/plain”
			  binder: defaultRabbit  # 设置要绑定的消息服务的具体设置

	eureka:
	  client: # 客户端进行Eureka注册的配置
		service-url:
		  defaultZone: http://localhost:7001/eureka
	  instance:
		lease-renewal-interval-in-seconds: 2 # 设置心跳的时间间隔（默认是30秒）
		lease-expiration-duration-in-seconds: 5 # 如果现在超过了5秒的间隔（默认是90秒）
		instance-id: send-8802.com  # 在信息列表时显示主机名称
		prefer-ip-address: true     # 访问的路径变为IP地址
	
	4.主启动类.
	  @SpringBootApplication
		@EnableEurekaClient
		public class ConsumerCloudMain8802 {
			public static void main(String[] args) {
				SpringApplication.run(ConsumerCloudMain8802.class,args);
			}
		}

    5.业务类
	  这里只有一个接收消息类.
	  @EnableBinding(Sink.class)
		public class ReceiveController {

			@Value("${server.port}")
			private String serverPort;

			@StreamListener(Sink.INPUT)  //通过该注解将消费者接收到的消息与具体的接收消息方法继续绑定
			public void ReceiveMessage(Message<String> message){
				System.out.println("当前端口:"+serverPort+",接收到消息:"+message.getPayload());
			}

		}










   
  