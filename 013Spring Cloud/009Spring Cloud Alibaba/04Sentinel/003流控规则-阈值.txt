1.前面说了sentinel可以对请求进行监控,那么我们也可以通过配置对这些请求进行处理
  比如说设置请求的最大QPS,如果达到这个qps直接返回失败或者排队进行处理,这些都可以做.
  
  
2.样例1
  (1)对testA这个请求设定QPS为1(每秒中1个请求),如果超过就直接失败.
	  
	  再簇点链路中点击右边的+流控,按如下设置即可.
	  
	  资源名	来源应用	流控模式	阈值类型	阈值	阈值模式	流控效果
	  /testA	default	     直接	       QPS	     1	     单机	    快速失败	
	  
	  然后对访问进行测试,发现1秒中请求多次会直接失败,出现如下页面.
		Blocked by Sentinel (flow limiting)
		
	  小问题:
		 如果我们想自定义失败后的处理操作应该怎么做?就像Hystrix中的兜底方法.
	 
	 

  
  
  (2)上面是QPS设置为1的时候,每秒中只允许一个请求.那么我们可以看到还有一个阈值类型是线程,当我们设置线程为1的时候,效果是什么样子.
	  资源名	来源应用	流控模式	阈值类型	阈值	阈值模式	流控效果
	  /testA	default	      直接	      线程数	1	      单机	    快速失败
	 
      其实就是调用该api的线程数最大为1,如果超过一个线程就会返回失败.
  
  
      问题:当我们增加该规则时,持续点击发现好像没有生效,对于tomcat来说不是每个请求都需要单独创建一个线程去处理吗?为什么点了这么多次,还没有失败?   
	         其实并不是每个请求一定会创建一个线程去处理,如果当前有可用空闲线程,就会直接调用该线程去处理,我们连续点击还正常的原因是程序处理的时间太快,再我们进行下一次点击请求时,当前线程已经处理完毕,并进入
		   空闲状态,从而可以使用一个线程连续处理多个请求.
		     那么当我们把单个请求处理时间边长,比如说睡眠1秒,再连续访问,就会发现返回失败了
	  
	 