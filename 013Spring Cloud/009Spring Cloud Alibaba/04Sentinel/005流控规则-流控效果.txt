
	在之前我们使用的流控效果是直接失败,然后其实有其他效果,warm up和排队等待.
	
	
一.warm up.
   就是从一个开始值,经过一段时间,才达到设定的阈值.
   这个开始值就是 阈值/冷加载因子(codeFactor,默认3)
   一段时间就是预热时长
   阈值就是我们自己设定的
   
   为什么需要有这个配置?
      当流量突然增大的时候，我们常常会希望系统从空闲状态到繁忙状态的切换的时间长一些。即如果系统在此之前长期处于空闲的状态，我们希望处理请求的数量是缓步的增多，经过预期的时间以后，到达系统处理请求个数的最大值。Warm Up（冷启动，预热）模式就是为了实现这个目的的。

	  这个场景主要用于启动需要额外开销的场景，例如建立数据库连接等。
	  
	这个场景还有它具体实现的算法,
	   https://github.com/alibaba/Sentinel/wiki/%E9%99%90%E6%B5%81---%E5%86%B7%E5%90%AF%E5%8A%A8
	   
	   

    配置举例:阈值设置为10,预热市场设置为5,流控效果设置为warm up
	具体效果:
	    最开始的限流为3,真实的阈值从3逐渐升值10,这个过程持续5秒
		
		
二.排队等待
   让请求以均匀的速度通过,严格控制请求通过的间隔时间,匀速排队，阈值必须设置为QPS
   这种主要应对间歇性突增的场景,然后让请求均匀的排队,均匀执行
   该实现对应的漏桶算法
   
   配置举例:QPS设置为2,超时时间设置为1秒
   具体效果:
       不论实际请求如何,严格排队控制请求以每500ms一个的速度进行,当某个请求等待超过1秒,返回失败
      
   
   
   
   
  
		
		
		