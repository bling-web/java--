一.业务说明.
   这里我们会创建三个微服务,一个订单微服务,库存服务和一个账户服务.
   当用户创建一个订单的时候,会通过订单服务创建一个订单,然后远程调用库存服务,成功后在远程调用账户服务扣减库存.
   最后在订单服务中修改状态.
   这里涉及到三个微服务的调用,会有明显的分布式事务的问题.
   
二.创建业务数据库.
   1.这里创建三个数据库.
	   订单库:
		CREATE DATABASE seata_order；
	   库存库:
		CREATE DATABASE seata_storage；
	   账户库:
		CREATE DATABASE seata_account；
	2.在对应的库下建立对应的表.
	  (1)在订单库下建立t_order表
		CREATE TABLE t_order(
		id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
		user_id BIGINT(11) DEFAULT NULL COMMENT '用户id',
		product_id BIGINT(11) DEFAULT NULL COMMENT '产品id',
		COUNT INT(11) DEFAULT NULL COMMENT '数量',
		money DECIMAL(11,0) DEFAULT NULL COMMENT '金额',
		STATUS INT(1) DEFAULT NULL COMMENT '订单状态：0：创建中; 1：已完结'
		) ENGINE=INNODB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;
		
	   (2)在库存库中建立t_storage表.并插入一条数据
	   CREATE TABLE t_storage(
			id BIGINT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
			product_id BIGINT(11) DEFAULT NULL COMMENT '产品id',
			total INT(11) DEFAULT NULL COMMENT '总库存',
			used INT(11) DEFAULT NULL COMMENT '已用库存',
			residue INT(11) DEFAULT NULL COMMENT '剩余库存'
		) ENGINE=INNODB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
		 
	    INSERT INTO t_storage(id,product_id,total,used,residue) VALUES('1','1','100','0','100');
		
		(3)seata_account库下建t_account表
		CREATE TABLE t_account(
			id BIGINT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'id',
			user_id BIGINT(11) DEFAULT NULL COMMENT '用户id',
			total DECIMAL(10,0) DEFAULT NULL COMMENT '总额度',
			used DECIMAL(10,0) DEFAULT NULL COMMENT '已用余额',
			residue DECIMAL(10,0) DEFAULT '0' COMMENT '剩余可用额度'
		) ENGINE=INNODB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
		 
		INSERT INTO t_account(id,user_id,total,used,residue) VALUES('1','1','1000','0','1000')
		
	
	3.在三个数据库下分别建立对应的回滚日志.
	  SQL文件为\seata-server-0.9.0\seata\conf目录下的db_undo_log.sql.
	  也就是如下:
	  CREATE TABLE `undo_log` (
		  `id` BIGINT(20) NOT NULL AUTO_INCREMENT,
		  `branch_id` BIGINT(20) NOT NULL,
		  `xid` VARCHAR(100) NOT NULL,
		  `context` VARCHAR(128) NOT NULL,
		  `rollback_info` LONGBLOB NOT NULL,
		  `log_status` INT(11) NOT NULL,
		  `log_created` DATETIME NOT NULL,
		  `log_modified` DATETIME NOT NULL,
		  `ext` VARCHAR(100) DEFAULT NULL,
		  PRIMARY KEY (`id`),
		  UNIQUE KEY `ux_undo_log` (`xid`,`branch_id`)
		) ENGINE=INNODB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
		
		
		
		   

			
