1.数据和索引都是存储在磁盘中.
2.那在读取的时候就涉及到将数据从磁盘读取到内存中.但是肯定不能全部加载完毕,就涉及到以下几个原理.
   (1)时间局部性:之前被查询的数据可能再次需要
   (2)空间局部性:数据和程序都有聚集成群的倾向,可以理解为拥有某些共同特征的数据会存储在一起.
   (3)磁盘预读: 磁盘和内存中交互的基本但是是页,就是磁盘页,一般和操作系统相关,一般为4kb或者8kb.我们在进行数据读取的时候要读取页的整数倍大小.	


3.Mysql中有没有hash索引?
   有,只不过Innodb没有选择这个.	


4.一般情况下,3到4层的B+树足以支撑千万级别的数据存储(一个数据块或者说一个节点按16kb来算).
   这个跟key(索引)的大小相关,和记录(data)相关,所以一般来说,索引会倾向于占用更小空间的值.越小越好.
    如果不清楚可以看B+树数据结构.
    问题:
         索引一般选用int还是varchar类型得数据?
         int会占四个字节,varchar是可变得,如果你得varchar小于4个字节用varchar合适,否则用int合适.


5.假如我选用ID作为索引,那么应不应该自增?
   应该,因为这样索引加的是有序的,也就能够能够减少索引维护的成本.
   为什么?
         假如我一个磁盘块存了4条记录,已经占了16kb,ID分别是11,12,13,15,那么接下来我需要增加ID为14的记录,那么就需要拆分节点,拆分节点又会影响到上一个节点存储,
    甚至会影响这个B+树的存储结构.