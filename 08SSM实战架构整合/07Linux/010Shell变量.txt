一.变量
    shell传递数据的一种方法,用来代表每个取值的符号名.
    
二.分类.
    shell有两种变量,临时变量和永久变量.
    1.临时变量.
       shell程序内部定义的,使用范围仅限于它的程序,对其他程序不可见,包括:用户自定义变量,位置变量.
    2.永久变量.
       针对于整个linux系统而言的,比如环境变量,编码集变量.
        直接输出环境变量:
            echo $PATH      //$就像js里面的取地址符.

三.自定义变量.
    1.定义规则.
      a.用户定义的变量由字母或下划线开头或数字,由字母,数字或下划线组成,区分大小写.
      b.变量名长度没有限制.
      c.在使用变量值时,要在变量名前加上前缀"$".
      d.一般变量名使用大小写字母表示,并且是英文字母开头,赋值号"="两边没有空格,如NUM=5,STR="String".
    2.其他注意事项.(没有分号)
      a.可以将一个命令的执行结果赋给变量,但是需要使用命令替换符号``,Esc下面的那个点.会把里面全部的运算当成一个结果,
         例:P1=`date`
             P2=$P1
             echo $P2    //会直接输出日期.
      b.注意单引号和双引号的区别,""号是会把里面的变量值进行输出,当然也需要加上$.''是会把内容原封不动的输出,不会识别里面的变量.
      c.可以使用set命令查看所有的变量(整个系统的变量).可以使用unset命令删除所有的变量. unset [变量名]:  删除某一个变量.
      总结: ``会引用全部计算的结果, ""会引用里面部分变量的结果,''则什么也不引用,直接输出.


三.位置变量.
    在shell里面还有两种特殊的变量,一种就是位置变量,比如$0-$9
    举例:
    #!/bin/sh
    DATE=`/bin/date +%Y%m%d`
    echo "TODAY IS $DATE"
    echo $0                     //以下$0-$3都是位置变量
    /bin/ls -l $1      
    /bin/ls -l $2
    /bin/ls -l $3
    这是一个名为ex3.sh中的内容.如果我们输入命令:  sh ex3.sh  /test   /usr/bin    /test/ex
       $0代表ex3.sh   $1代表/test    $2代表/usr/bin   $3代表/test/ex
       那么这个命令的结果就是分别列出/test,  /usr/bin,/test/ex下的内容.   
    那如果我们不输入这些位置变量呢? 直接输入sh ex3.shc,会是什么结果呢?
       那么$1-$3取到的值就是空,就和ls -l 结果是一样的.

四.特殊变量.
    还有一些特殊变量.
    举例: 
    #!/bin/sh
    DATE=`/bin/date +%F`
    echo "today is $DATE"
    echo '$# :' $#             //这个程序的参数个数
    echo '$* :' $*              //这个程序的所有参数
    ls &                            //这里就表示上一个后台命令
    echo '$! :' $!               //执行上一个后台命令的PID
    echo '$? :' $?              //执行上一个命令的返回值
    echo '$$ :' $$             //这个程序的PID
   这个文件的名称是ex4.sh,比如我们执行sh ex4.sh /aa /bb /cc
      那么$#:3  $*: /aa  /bb  /cc     $!:执行ls &这个后台程序的PID    $? :0 (这里还不太清楚上一个后台命令指的是啥)  $$:sh ex4.sh这个程序的PID.
    
     
 
     
        
    