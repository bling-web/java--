
   Redis有两种持久化方式,一种RDB,一种AOF.

一.RDB持久化.
    在指定的时间里将内存中的数据集快照写入磁盘.在dump.rdb文件中, 也是默认的持久化方式.
       save 900 1     //在900秒内有一个键被更改,发起快照保存.
       save 300 10   //在300秒内有十个键被更改,发起快照保存.
   1.优点.
      a.整个redis只包含一个数据文件 dump.rdb.文件备份,恢复方便.
      b.保证性能最大化, 因为是fonk一个子进程,之后由子进程完成数据的持久化,避免服务进程进行大量的IO操作.
      c.如果数据量比较大,相比较AOF而言,启动更快.
   2.缺点.
      a.可能有数据丢失,如果在写入磁盘时间间隔内发生故障,那么这个时间内的数据就会丢失.
      b.如果数据量很大,fonk的子进程可能会导致整个服务器停止几百毫秒.

二.AOF持久化.(默认不开启)
    记录数据库写操作的持久化方案,会忠实的记录所有写(增删改)操作,不是数据集,并且以redis协议的格式存储在.aof文件中(也就是写入磁盘),在重启redis的时候,可以根据.aof的内容,重新执行这些命令来恢复数据集.
       appendfsync  always     //只要有写操作就写入到磁盘中,性能低.但保证完全的持久化.
       appendfsync  everysec  //每一秒将写操作把保存到磁盘中.性能和持久化做了很好的折中.推介使用.
       appendfsync  no           //完全依赖os,性能最好,持久化没保证.
    1.优点.
       a.更高的数据的安全性.一秒钟就写入一次.
       b.AOF包含了一个格式清晰,易于理解的日志文件,用于记录所有的操作.也是通过这个文件来完成数据的重建的工作的.
       c.在日志文件变大的时候,会自动进行重写.
    2.缺点.
       a.运行效率低于RDB.



三.总结
   RDB是更高的性能,AOF更好的数据安全,一般不建议只开启AOF,要不就两个都开启.
   ROB为了有更高的性能:
     1.fonk子进程,去执行数据持久化.
     2.数据在一个文件中,速度更快.
   AOF为了更高的数据安全:
     1.写入跟频繁,一秒一次.
     2.包含日志文件,可以进行数据恢复.

