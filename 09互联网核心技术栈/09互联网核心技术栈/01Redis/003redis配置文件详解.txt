1.默认redis不是以后台进程的方式启动,如果需要在后台运行,需要将这个值设置成yes.
  以后台方式启动的时候,redis会写入默认的进程文件/var/runredis.pid
   daemonize yes                                                       //daemonize:后台进程
    怎么才知道在后台已经启动成功了?ps -ef | grep redis.

2.redis启动的进程路径.
   pidfile /var/run/redis.pid

3.启动进程端口号,这里最好不要使用默认的6379,容易被攻击.
   port 7179
   
   tcp-backing 511

4.配置redis监听到的ip地址,可以是一个,也可以是多个.尽量不要绑定本机的回环地址，因为当使用java远程连接的时候，回环地址指的你的宿主机，并不是虚拟机。
   bind 192.168.5.111              //bind:连接

5.redis的sock路径.
   unixsocket /tmp/redis.sock
   unixsocketperm 755

6.当客户端限制多长时间后关闭连接,如果指定为0,表示关闭该功能.一直不会关闭.
   timeout 0

7.指定tcp连接对否为长连接,"侦探"信号有server端维护,默认为0,表示禁用.
   tcp-keepalive 0

8.日志级别.log分为4级,debug,verbose,notice,和warning.生产环境下一般开启notice.
   loglevel notice

9.日志文件地址
   logfile "/usr/local/redis/logs/redis.log"

10.设置数据库的个数,可以使用户SELECT命令来切换数据库,默认使用的数据库的0号库,默认16个库.
     databases 16

11.RDB方式的持久化是通过快照(snapsshotting)完成的,当符合一定条件Redis会自动将内存中所有的数据进行快照并存储在磁盘中   .进行快照的条件可以由用户在配置文件中自定义,由两个参数构成.
     时间和改动的键的个数,当在指定的时间内被更改的键的个数大于指定的数值时就会进行快照.RDB是redis默认采用的持久化方式,在配置文件中已经预置了三个条件.
    save 900 1    //900秒内至少一个键被更改,则进行快照.
    save 300 10  //300秒内至少有10个键被更改则进行快照
    save 60 10000 //60秒内至少有10000个键被更改则进行快照

12.持久化数据存储目录.
   dir /usr/local/redis/data

13.当持久化出现错误时,是否依然继续进行工作,是否终止所有的客户端write请求,默认yes表示终止,一旦snapshot数据保存故障,那么此server为只读服务,如果为no,那么此次snapshot将失败,数据只能恢复到
    "最近一个成功点"
     stop-writes-on-bgsave-error yes

14.在进行数据镜像备份时,是否启用rdb文件压缩手段,默认为yes,可能要额外的cpu开支,但是可以减少rdb文件大小,有利于进行存储/备份/传输/数据恢复.
     rdbcompression yes              //compression压缩

15.镜像备份文件的文件名,默认为dump.rdb
    dbfilename dump.rdb

16.当主master服务器挂机或主从复制在进行时,是否依然可以允许客户访问可能过期的数据,在默认"yes" 情况下,slave继续向客户端提供只读服务,有可能此时的数据已过期.在"no"情况下,任何向此server发送到额
    数据请求服务(包括客户端和此server的slave)都被告知为error.
    slave-serve-stale-data yes        //stale date 过期的数据

17.如果是slave库,只允许只读,不允许修改.
    slave-read-only yes            //slave表示从节点,master表示主节点

18. slave与master的连接,会否禁用TCPnodelay选项,"yes"表示禁用,那么socket通讯中数据将以packet方式发送(packet数据受buffer大小限制).可以提高socket的效率(tcp交互此次数),但是小数据会被buffer(缓冲)
      也就是不会被立即发送,所以对于接受者可能存在延迟."no"表示开启TCPnodelay,也就是任何数据不论大小都会被立即发送,及时性较好,但是效率低,建议设置为no,在高并发或者主从有大量操作的情况下,设置为yes
     repl-disable-tcp-nodelay no

 19.适用Sentinel模块(unstable,M-S集群管理和监控),需要额外的配置文件支持.slave的权重值,默认为100,当master失效后,Sentinal(哨兵)将会从slave列表中找到权重值最低(>0)的slave,并提升为master.如果权重值为
     0,表示此slave为观察者,不参与master的选举.
    slave-priority  100            //priority(优先权)

20.允许追加,将信息追加到append.aof中,在下一次启动前,从该文件导出,使恢复之前的状态.
     appendonly yes

一.简化配置.
    配置很多,在现阶段很多用不上,所有直接把所有配置都清空,然后把必要的写上去.
    1.清空:echo ''>redis.conf
    2.配置
                                                          
      daemonize yes

      pidfile /home/tim/servers/redis/bin/redis.pid

     port 10232

     bind 127.0.0.1 192.168.5.111
     //注意这里绑定的是你本机的回环地址127.0.0.1或者是你linux中设置的ip.不能指定外部的ip.如果指定后,只允许指定的ip可以访问redis服务.

     loglevel notice

     logfile "/home/tim/servers/redis/logs/redis.log"

     dir /home/tim/servers/redis/data
     说明:如果启动失败,可以看看日志文件中的原因.
                               