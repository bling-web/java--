一.定义.
    MapReduce是一个分布式运算程序的编程框架,是用户开发"基于hadoop的数据分析应用"的核心框架.
    Mapreduce的核心是将用户编写的业务逻辑代码和自带默认组件整合成一个完整的分布式运算程序,并发运行在一个hadoop集群上.
    也就是用户可以编写自定义程序通过mapreduce运行在hadoop集群上,当然要遵守一些规范.比如说接口规定.

二.优点.
    1.易于编程.
       只需要实现一些简单的接口,便可实现一个分布式程序,而且可以在大量的廉价机器上运行,也基于此使其特别流行.
    2.良好的扩展性.
       可以简单的增加机器.
    3.高容错性.
       比如一个节点挂了,他可以把上面的计算任务转移到另一个节点上运行,不至于这个任务运行失败,而这一切都是hadoop内部自己完成的,不需要人为参与.
    4.适合大量数据的离线处理.
  

三.缺点:
     1.不适合实时处理,返回结果较慢.
     2.不能流式计算(也就是持续的输入,持续的输出结果).
        而mapreduce的数据必须是静态的.
     3.不适合DAG(有向图)计算
        也就是应用之间存在依赖关系,前一个应用程序的输出作为后一个应用程序的输入,在这种情况下,mapreduce不是不能做,而是使用后每个mapreduce的输出结果都会写入到磁盘中.
        会造成大量的磁盘IO,导致性能非常低下.
 
四.mapreduce核心思想.
     1.分布式的运算程序往往至少分为两个阶段,第一个阶段的map task并发实例,完全并发运行,互不干扰.第二个阶段的reduce task并发实例,也是互不干扰,但他们的数据依赖于上一个map
        task的输出.
     2.一个mapreduce只能包含一个map和一个reduce,如果一个任务特别复杂,就只能编写多个mapreduce程序,串行运行.

五.mapreduce进程.
     一个完整的mapreduce程序在分布式运行时有三类实例进程.
     1.MrAppMaster:负责整个程序的过程调度和状态协调.
     2.maptask:负责map阶段的整个数据处理流程.
     3.reducetask:负责reduce阶段的这个数据处理流程.

