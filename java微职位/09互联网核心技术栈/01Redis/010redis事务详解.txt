一.关系型数据库事务回顾.
   事务的四大特性.
    1.原子性.
      事务所有操作要么全部成功,要么全部失败.
    2.一致性.
        事务在执行前数据库的状态和执行后数据库的状态保持一致.
       举个例子就是一个程序员查看的时候,另一个程序员进行修改的例子.
    3.隔离性.
       事务之间不相互影响. 
    4.持久性
       执行成功后,对数据的操作是持久的.

二.redis事务详解.
    1.事务理解.
       a.Redis事务允许在一次单独的步骤中执行多个命令,并且可以保证两个重要事项(原子和隔离),当然和传统关系型数据库事务是没有办法比的.
       b.如果其中一个命令执行失败,其他也不会回退.但是如果执行失败一定是因为语法错误,但是语法错误是不能加到队列中的,所有进行了简化,使其高效执行.
       c. 能保证的仅仅是不受干扰的一次执行多个命令(而且集群状态下是不能跨节点使用事务的.很麻烦,因为各种数据不一定存储在哪个节点上,这里演示的是单机模式下的).
    2.Redis事务的特性.
       a.Redis会将一个事务中的所有命令序列化,并按顺序执行这些命令,并且可以保证在这些命令执行的过程中,不会插入执行另一个客户端发出的请求.
         保证将这些命令作为一个单独的命令去执行.(阉割的隔离)
       b.在一个Redis事务中,redis要么执行其中的所有命令.要不全部都不执行.(阉割的原子性)
   
三,使用命令.
    1.MULTI:用于标记数据库的开始,将命令依次加入到一个队列中(命令必须符合原子规则).
    2.EXEC: 执行队列中的所有命令,然后恢复连接状态.
    3.DISCARD:清除队列中的所有命令,然后恢复连接状态.
    4.WATCH:如果某个事物需要按条件执行,那么就需要使用该命令将给定的键设定为受监控的.
    5.UNWATCH:和WATCH相反,清除所有的受监控的键.